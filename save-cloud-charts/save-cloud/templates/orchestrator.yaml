apiVersion: apps/v1
kind: Deployment
metadata:
  name: orchestrator
  labels:
    {{- include "common.labels" (merge (dict "service" .Values.orchestrator) .) | nindent 4 }}
spec:
  selector:
    matchLabels:
      io.kompose.service: orchestrator
  replicas: 1
  template:
    metadata:
      labels:
        {{- include "pod.common.labels" (merge (dict "service" .Values.orchestrator ) .) | nindent 8 }}
      annotations:
        {{- include "pod.common.annotations" (dict "service" .Values.backend ) | nindent 8 }}
    spec:
      serviceAccountName: orchestrator-sa
      restartPolicy: Always
      {{- if .Values.orchestrator.nodeName }}
      nodeName: {{ .Values.orchestrator.nodeName }}
      {{- end }}
      {{- include "cnb.securityContext" . | nindent 6 }}
      containers:
        - name: orchestrator
          {{- include "spring-boot.common" (merge (dict "service" .Values.orchestrator) .) | nindent 10 }}
          env:
            {{- include "spring-boot.common.env" (merge (dict "service" .Values.orchestrator) .) | nindent 12 }}
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: JAVA_TOOL_OPTIONS
              value: -XX:ReservedCodeCacheSize=48M
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - {{ include "spring-boot.config-volume-mount" . | indent 14 | trim }}
          {{- include "spring-boot.management" .Values.orchestrator | nindent 10 }}
          resources:
            limits:
              memory: 800M
            requests:
              memory: 600M
      volumes:
        - {{ include "spring-boot.config-volume" (dict "service" .Values.orchestrator) | indent 10 | trim }}
---
apiVersion: v1
kind: Service
metadata:
{{- include "service.common.metadata" (dict "service" .Values.orchestrator) | nindent 2 }}
spec:
  {{ if .Values.orchestrator.clusterIP }}
  clusterIP: {{ .Values.orchestrator.clusterIP }}
  {{ end }}
  ports:
    {{- include "service.common.ports" (dict "service" .Values.orchestrator) | nindent 4 }}
  selector:
    {{- include "service.common.selectors" (dict "service" .Values.orchestrator) | nindent 4 }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.orchestrator.name }}-config
data:
  application.properties: |
    {{ if .Values.orchestrator.applicationProperties }}
    {{- .Values.orchestrator.applicationProperties | nindent 4 }}
    {{ end }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: orchestrator-sa

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: jobs-executor
  {{ if .Values.agentNamespace }}
  namespace: {{ .Values.agentNamespace }}
  {{ end }}
rules:
  - apiGroups: [""]  # "" indicates the core API group
    resources: [services]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: [batch]
    resources: [jobs]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: [""]  # "" indicates the core API group
    resources: [pods]
    verbs: [list, get, delete, create]
  # this rule is required for sprint-cloud-kubernetes-fabric8-config
  - apiGroups: [""]  # "" indicates the core API group
    resources: [configmaps, secrets]
    verbs: [list, get, watch]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: orchestrator-jobs-binding
  {{ if .Values.agentNamespace }}
  namespace: {{ .Values.agentNamespace }}
  {{ end }}
subjects:
  - kind: ServiceAccount
    name: orchestrator-sa
    namespace: {{ .Values.namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: jobs-executor
