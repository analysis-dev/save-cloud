apiVersion: apps/v1
kind: Deployment
metadata:
  name: orchestrator
  labels:
    {{- include "common.labels" (merge (dict "service" .Values.orchestrator) .) | nindent 4 }}
spec:
  selector:
    matchLabels:
      io.kompose.service: orchestrator
  template:
    metadata:
      labels:
        io.kompose.service: orchestrator
    spec:
      serviceAccountName: orchestrator-sa
      restartPolicy: Always
      {{- if .Values.orchestrator.nodeName }}
      nodeName: {{ .Values.orchestrator.nodeName }}
      {{- end }}
      {{- include "spring-boot.securityContext" . | nindent 6 }}
      containers:
        - name: orchestrator
          {{- include "spring-boot.common" (merge (dict "service" .Values.orchestrator) .) | nindent 10 }}
          env:
            {{- include "spring-boot.common.env" (merge (dict "service" .Values.orchestrator) .) | nindent 12 }}
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: JAVA_TOOL_OPTIONS
              value: -XX:ReservedCodeCacheSize=48M
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - {{ include "spring-boot.config-volume-mount" . | indent 14 | trim }}
            - name: tmp-resources-storage
              mountPath: /tmp/save/resources
            - name: execution-logs-storage
              mountPath: /home/cnb/executionLogs/
          {{- include "spring-boot.management" .Values.orchestrator | nindent 10 }}
          resources:
            limits:
              memory: 800M
            requests:
              memory: 600M
      volumes:
        - {{ include "spring-boot.config-volume" (dict "service" .Values.orchestrator) | indent 10 | trim }}
        - name: tmp-resources-storage
          persistentVolumeClaim:
            claimName: tmp-resources-storage
        - name: execution-logs-storage
          # FixMe: Do we still need logs storage? All logs should be stored in Loki.
          emptyDir: {}

---
# Temporary solution: a volume that can be shared between orchestrator and init-container that would copy test resources
# into a PV created for an execution. When agent will be able to download resources directly, this won't be needed.

apiVersion: v1
kind: PersistentVolume
metadata:
  name: tmp-resources-storage
spec:
  accessModes:
    - ReadWriteMany
  claimRef:
    namespace: {{ .Release.Namespace }}
    name: tmp-resources-storage
  capacity:
    storage: 5Gi
  hostPath:
    path:  /tmp/save/resources

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: tmp-resources-storage
  name: tmp-resources-storage
spec:
  volumeName: tmp-resources-storage
  accessModes:
    - ReadWriteMany
  storageClassName: ""
  resources:
    requests:
      storage: 5Gi
