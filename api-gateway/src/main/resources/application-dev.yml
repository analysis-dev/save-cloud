gateway:
  backend:
    url: http://localhost:5800
  frontend:
    # In the "dev" environment, the front-end uses TCP port 8080 when run using `webpack-dev-server` (i.e. `browserDevelopmentRun` or `run` Gradle task).
    url: http://localhost:8080
  sandbox:
    url: http://localhost:5400
  demo:
    url: http://localhost:5401
spring:
  security:
    oauth2:
      client:
        provider:
          # example: https://github.com/wearearima/spring-boot-dex/blob/master/src/main/resources/application.properties
          dex:
            authorization-uri: http://localhost:5556/dex/auth
            token-uri: http://localhost:5556/dex/token
            jwk-set-uri: http://localhost:5556/dex/keys
          github:
            # This is because in the default configuration
            # (o.s.s.c.o.c.CommonOAuth2Provider#GITHUB), the numeric "id" field
            # is taken from the JSON response from https://api.github.com/user.
            #
            # We want the publicly-visible "login" value instead.
            #
            # See https://docs.github.com/en/rest/users/users#get-the-authenticated-user
            # for more details.
            user-name-attribute: login
        registration:
          dex:
            client-id: save-gateway-dev
            client-secret: 123test123
            authorization-grant-type: authorization_code
            redirect-uri: '${gateway.frontend.url}/{action}/oauth2/code/{registrationId}'
            scope:
              - openid
          github:
            # We don't set any redirect-uri here, because it's managed by GitHub
            # (the field is called "Authorization callback URL" and, for a local
            # deployment, it should be exactly "http://localhost:8080/login/oauth2/code/github").
            #
            # Navigate to http://localhost:8080/sec/oauth-providers or
            # http://localhost:5300/sec/oauth-providers to check that the OAuth
            # provider is correctly installed.
            #
            # This is the public Client ID of your GitHub OAuth application.
            # See https://docs.github.com/en/developers/apps/building-oauth-apps/
            # for details.
            client-id: cd74c74af6b5c595f088

            # This is the per-service secret used by your service to authenticate
            # against your GitHub OAuth application. You can generate a new secret
            # under Settings -> Developer settings -> OAuth Apps.
            #
            # If the integration is set up correctly, in the OAuth application
            # settings, you'll see that the secret has been used
            # (e.g.: "Last used within the last week").
            client-secret: 2c05929edd949d670c3454258bbdbfefb7ba3eb7
logging:
  level:
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    com.nimbusds: TRACE
