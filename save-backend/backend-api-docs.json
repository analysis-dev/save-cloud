{
  "openapi": "3.0.1",
  "info": {
    "title": "SAVE Backend API",
    "version": "v1"
  },
  "servers": [
    {
      "url": "http://localhost:5800",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/api/v1/updateStandardTestSuites": {
      "post": {
        "tags": [
          "test-suites-controller"
        ],
        "operationId": "updateStandardTestSuites",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/test-suites-sources/{organizationName}/{name}/upload-snapshot": {
      "post": {
        "tags": [
          "test-suites-source"
        ],
        "summary": "Upload a snapshot of test suites source.",
        "description": "Upload a snapshot of test suites source.",
        "operationId": "uploadSnapshot",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "name of test suites source",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "version of uploading snapshot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "creationTime",
            "in": "query",
            "description": "creationTime of uploading snapshot",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "content",
            "description": "content of uploading snapshot",
            "required": true
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "content"
                ],
                "type": "object",
                "properties": {
                  "content": {
                    "$ref": "#/components/schemas/Part"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "409": {
            "description": "Organization was not found by provided name.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "404": {
            "description": "Test suites source with such name in organization name was not found.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "200": {
            "description": "Successfully uploaded provided snapshot.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/test-suites-sources/{organizationName}/{name}/download-snapshot": {
      "post": {
        "tags": [
          "test-suites-source"
        ],
        "summary": "Download a snapshot of test suites source.",
        "description": "Download a snapshot of test suites source.",
        "operationId": "downloadSnapshot",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "name of test suites source",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "version of downloading snapshot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "409": {
            "description": "Organization was not found by provided name.",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "short": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "char": {
                        "type": "string"
                      },
                      "int": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "long": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "float": {
                        "type": "number",
                        "format": "float"
                      },
                      "double": {
                        "type": "number",
                        "format": "double"
                      },
                      "direct": {
                        "type": "boolean"
                      },
                      "readOnly": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Test suites source with such name in organization name was not found.",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "short": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "char": {
                        "type": "string"
                      },
                      "int": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "long": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "float": {
                        "type": "number",
                        "format": "float"
                      },
                      "double": {
                        "type": "number",
                        "format": "double"
                      },
                      "direct": {
                        "type": "boolean"
                      },
                      "readOnly": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "Successfully downloaded snapshot with provided version.",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "short": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "char": {
                        "type": "string"
                      },
                      "int": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "long": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "float": {
                        "type": "number",
                        "format": "float"
                      },
                      "double": {
                        "type": "number",
                        "format": "double"
                      },
                      "direct": {
                        "type": "boolean"
                      },
                      "readOnly": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "short": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "char": {
                        "type": "string"
                      },
                      "int": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "long": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "float": {
                        "type": "number",
                        "format": "float"
                      },
                      "double": {
                        "type": "number",
                        "format": "double"
                      },
                      "direct": {
                        "type": "boolean"
                      },
                      "readOnly": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/test-suites-sources/{organizationName}/get-or-create": {
      "post": {
        "tags": [
          "test-suites-source"
        ],
        "summary": "Get or create a new test suite source by provided values.",
        "description": "Get or create a new test suite source by provided values.",
        "operationId": "getOrCreate",
        "parameters": [
          {
            "name": "organizationName",
            "in": "query",
            "description": "name of organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gitUrl",
            "in": "query",
            "description": "git url of test suites source",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRootPath",
            "in": "query",
            "description": "test root path of test suites source",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branch",
            "in": "query",
            "description": "branch of test suites source",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully get or create test suites source with requested values.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestSuitesSourceDto"
                }
              }
            }
          },
          "409": {
            "description": "Organization was not found by provided name.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestSuitesSourceDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestSuitesSourceDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/organizations/{organizationName}/upsert-git": {
      "post": {
        "tags": [
          "organizations"
        ],
        "summary": "Upsert organization git.",
        "description": "Upsert organization git.",
        "operationId": "upsertGit",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of an organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GitDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully saved an organization git.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permission for saving organization git.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Could not find an organization with such name.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/organization/{organizationName}/upsert-git": {
      "post": {
        "tags": [
          "organizations"
        ],
        "summary": "Upsert organization git.",
        "description": "Upsert organization git.",
        "operationId": "upsertGit_1",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of an organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GitDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully saved an organization git.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permission for saving organization git.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Could not find an organization with such name.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/organization/{organizationName}/update": {
      "post": {
        "tags": [
          "organizations"
        ],
        "summary": "Update existing organization.",
        "description": "Change settings of an existing organization by it\u0027s name.",
        "operationId": "updateOrganization",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of an organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organization"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully updated an organization.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Organization with such name already exists.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permission for managing this organization.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Could not find an organization with such name.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/organizations/{organizationName}/update": {
      "post": {
        "tags": [
          "organizations"
        ],
        "summary": "Update existing organization.",
        "description": "Change settings of an existing organization by it\u0027s name.",
        "operationId": "updateOrganization_1",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of an organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organization"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully updated an organization.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Organization with such name already exists.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permission for managing this organization.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Could not find an organization with such name.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/organizations/{organizationName}/manage-contest-permission": {
      "post": {
        "tags": [
          "organizations"
        ],
        "summary": "Make an organization to be able to create contests.",
        "description": "Make an organization to be able to create contests.",
        "operationId": "setAbilityToCreateContest",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of an organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isAbleToCreateContests",
            "in": "query",
            "description": "new flag for contest creation ability",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "403": {
            "description": "Could not change ability to create contests due to lack of permission.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Organization with such name was not found.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "Successfully changed ability to create contests.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/organization/{organizationName}/manage-contest-permission": {
      "post": {
        "tags": [
          "organizations"
        ],
        "summary": "Make an organization to be able to create contests.",
        "description": "Make an organization to be able to create contests.",
        "operationId": "setAbilityToCreateContest_1",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of an organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isAbleToCreateContests",
            "in": "query",
            "description": "new flag for contest creation ability",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "403": {
            "description": "Could not change ability to create contests due to lack of permission.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Organization with such name was not found.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "Successfully changed ability to create contests.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/organization/save": {
      "post": {
        "tags": [
          "organizations"
        ],
        "summary": "Create a new organization.",
        "description": "Create a new organization.",
        "operationId": "saveOrganization",
        "parameters": [
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully saved a new organization.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Requested name is not available.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/organizations/save": {
      "post": {
        "tags": [
          "organizations"
        ],
        "summary": "Create a new organization.",
        "description": "Create a new organization.",
        "operationId": "saveOrganization_1",
        "parameters": [
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully saved a new organization.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Requested name is not available.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/users/{userName}/save/token": {
      "post": {
        "tags": [
          "users-details-controller"
        ],
        "operationId": "saveUserToken",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/save": {
      "post": {
        "tags": [
          "users-details-controller"
        ],
        "operationId": "saveUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInfo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/test-execution": {
      "post": {
        "tags": [
          "test-executions"
        ],
        "operationId": "getTestExecutionByLocation",
        "parameters": [
          {
            "name": "executionId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestResultLocation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestExecutionDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/test-executions": {
      "post": {
        "tags": [
          "test-executions"
        ],
        "operationId": "getTestExecutions",
        "parameters": [
          {
            "name": "executionId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "checkDebugInfo",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestExecutionFilters"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestExecutionDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/submitExecutionRequest": {
      "post": {
        "tags": [
          "clone-repository-controller"
        ],
        "operationId": "submitExecutionRequest",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "executionRequest"
                ],
                "type": "object",
                "properties": {
                  "executionRequest": {
                    "$ref": "#/components/schemas/ExecutionRequest"
                  },
                  "file": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ShortFileInfo"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/rerunExecution": {
      "post": {
        "tags": [
          "execution-controller"
        ],
        "operationId": "rerunExecution",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{organizationName}/{projectName}/users/roles": {
      "get": {
        "tags": [
          "projects",
          "roles"
        ],
        "summary": "Get role for a user on a particular project.",
        "description": "If userName is not present, then will return the role of current user in given project, otherwise will return role of user with name userName in project with name projectName.",
        "operationId": "getRole",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of an organization in which given project is in",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "name of a project",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userName",
            "in": "query",
            "description": "name of a user that is being requested",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "404": {
            "description": "Requested user or project doesn\u0027t exist or the user doesn\u0027t have enough permissions (i.e. project is hidden from the current user)",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "ADMIN",
                    "NONE",
                    "OWNER",
                    "SUPER_ADMIN",
                    "VIEWER"
                  ]
                }
              }
            }
          },
          "200": {
            "description": "Successfully fetched user\u0027s role",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "ADMIN",
                    "NONE",
                    "OWNER",
                    "SUPER_ADMIN",
                    "VIEWER"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "ADMIN",
                    "NONE",
                    "OWNER",
                    "SUPER_ADMIN",
                    "VIEWER"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      },
      "post": {
        "tags": [
          "projects",
          "roles"
        ],
        "summary": "Set role for a user on a particular project",
        "description": "Set role for a user on a particular project",
        "operationId": "setRole",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of an organization in which given project is in",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "name of a project",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "setRoleRequest",
            "in": "path",
            "description": "setRoleRequest passed through body",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SetRoleRequest"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "403": {
            "description": "User doesn\u0027t have permissions to manage this members",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "404": {
            "description": "Requested user or project doesn\u0027t exist",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "200": {
            "description": "Permission added",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/projects/update": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Update an existing project.",
        "description": "Update an existing project.",
        "operationId": "updateProject",
        "parameters": [
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Either project or organization could not be found.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "Successfully updated a project.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permission for managing project settings.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/projects/save": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Create a new project.",
        "description": "Create a new project.",
        "operationId": "saveProject",
        "parameters": [
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Could not find organization with such name.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Either invalid data, or project with such name is already created.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "Successfully created a new project.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/organizations/{organizationName}/users/roles": {
      "get": {
        "tags": [
          "roles",
          "organizations"
        ],
        "summary": "Get user\u0027s role in organization with given name.",
        "description": "If userName is not present, then will return the role of current user in given organization, otherwise will return role of user with name userName in organization with name organizationName.",
        "operationId": "getRole_1",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of an organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userName",
            "in": "query",
            "description": "name of a user",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "403": {
            "description": "You are not allowed to see requested user\u0027s role.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "ADMIN",
                    "NONE",
                    "OWNER",
                    "SUPER_ADMIN",
                    "VIEWER"
                  ]
                }
              }
            }
          },
          "200": {
            "description": "Successfully fetched user\u0027s role.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "ADMIN",
                    "NONE",
                    "OWNER",
                    "SUPER_ADMIN",
                    "VIEWER"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Requested user or organization doesn\u0027t exist.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "ADMIN",
                    "NONE",
                    "OWNER",
                    "SUPER_ADMIN",
                    "VIEWER"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "ADMIN",
                    "NONE",
                    "OWNER",
                    "SUPER_ADMIN",
                    "VIEWER"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      },
      "post": {
        "tags": [
          "roles",
          "organizations"
        ],
        "summary": "Set user\u0027s role in organization with given name.",
        "description": "Set user\u0027s role in organization with given name.",
        "operationId": "setRole_1",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of an organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "setRoleRequest",
            "description": "pair of userName and role that is requested to be set",
            "required": true
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetRoleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "User doesn\u0027t have permissions to manage this members",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Requested user or organization doesn\u0027t exist",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "Permission added",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/image/upload": {
      "post": {
        "tags": [
          "download-files-controller"
        ],
        "operationId": "uploadImage",
        "parameters": [
          {
            "name": "owner",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ORGANIZATION",
                "USER"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ImageInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/{organizationName}/{projectName}/upload": {
      "post": {
        "tags": [
          "download-files-controller"
        ],
        "operationId": "upload",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "returnShortFileInfo",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/{organizationName}/{projectName}/download": {
      "post": {
        "tags": [
          "download-files-controller"
        ],
        "operationId": "download",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileInfo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "short": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "char": {
                        "type": "string"
                      },
                      "int": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "long": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "float": {
                        "type": "number",
                        "format": "float"
                      },
                      "double": {
                        "type": "number",
                        "format": "double"
                      },
                      "direct": {
                        "type": "boolean"
                      },
                      "readOnly": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/get-execution-info": {
      "post": {
        "tags": [
          "download-files-controller"
        ],
        "operationId": "getExecutionInfo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestExecutionDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "short": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "char": {
                        "type": "string"
                      },
                      "int": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "long": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "float": {
                        "type": "number",
                        "format": "float"
                      },
                      "double": {
                        "type": "number",
                        "format": "double"
                      },
                      "direct": {
                        "type": "boolean"
                      },
                      "readOnly": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/get-debug-info": {
      "post": {
        "tags": [
          "download-files-controller"
        ],
        "operationId": "getDebugInfo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestExecutionDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "short": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "char": {
                        "type": "string"
                      },
                      "int": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "long": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "float": {
                        "type": "number",
                        "format": "float"
                      },
                      "double": {
                        "type": "number",
                        "format": "double"
                      },
                      "direct": {
                        "type": "boolean"
                      },
                      "readOnly": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executionRequestStandardTests": {
      "post": {
        "tags": [
          "clone-repository-controller"
        ],
        "operationId": "executionRequestStandardTests",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "execution",
                  "file"
                ],
                "type": "object",
                "properties": {
                  "execution": {
                    "$ref": "#/components/schemas/ExecutionRequestForStandardSuites"
                  },
                  "file": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ShortFileInfo"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/execution/delete": {
      "post": {
        "tags": [
          "execution-controller"
        ],
        "operationId": "deleteExecutionsByExecutionIds",
        "parameters": [
          {
            "name": "executionIds",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/execution/deleteAll": {
      "post": {
        "tags": [
          "execution-controller"
        ],
        "operationId": "deleteExecutionForProject",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contests/update": {
      "post": {
        "tags": [
          "contests"
        ],
        "summary": "Update contest.",
        "description": "Change existing contest settings.",
        "operationId": "updateContest",
        "parameters": [
          {
            "name": "contestRequest",
            "description": "name of an organization",
            "required": true
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Not enough permission to edit current contest.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Either organization or contest with such name was not found.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "Successfully fetched public tests.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/contests/create": {
      "post": {
        "tags": [
          "contests"
        ],
        "summary": "Create a new contest.",
        "description": "Create a new contest.",
        "operationId": "createContest",
        "parameters": [
          {
            "name": "contestDto",
            "description": "contest requested for creation",
            "required": true
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Contest was successfully created.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Contest with given name is already present.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "User cannot create contests with given organization.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Organization with given name was not found.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/test-suites-sources/{organizationName}/{name}/list-snapshot": {
      "get": {
        "tags": [
          "test-suites-source"
        ],
        "summary": "List of snapshot for test suites source.",
        "description": "List of snapshot for test suites source.",
        "operationId": "listSnapshotVersions",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "name of test suites source",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully listed snapshots for requested test suites source.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestSuitesSourceSnapshotKey"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Organization was not found by provided name.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestSuitesSourceSnapshotKey"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Test suites source with such name in organization name was not found.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestSuitesSourceSnapshotKey"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestSuitesSourceSnapshotKey"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/test-suites-sources/{organizationName}/{name}/id": {
      "get": {
        "tags": [
          "test-suites-source"
        ],
        "summary": "ID of requested test suites source.",
        "description": "ID of requested test suites source.",
        "operationId": "getId",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "name of test suites source",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "409": {
            "description": "Organization was not found by provided name.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "404": {
            "description": "Test suites source with such name in organization name was not found.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "200": {
            "description": "Successfully resolved ID for requested test suites source.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/test-suites-sources/{organizationName}/{name}/get-test-suites": {
      "get": {
        "tags": [
          "test-suites-source"
        ],
        "summary": "List of test suites in requested test suites source.",
        "description": "List of test suites in requested test suites source.",
        "operationId": "getTestSuites",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "name of test suites source",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully listed snapshots for requested test suites source.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestSuite"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Organization was not found by provided name.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestSuite"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Test suites source with such name in organization name was not found.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestSuite"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestSuite"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/test-suites-sources/{organizationName}/{name}/contains-snapshot": {
      "get": {
        "tags": [
          "test-suites-source"
        ],
        "summary": "Check that test suites source contains provided version.",
        "description": "Check that test suites source contains provided version.",
        "operationId": "containsSnapshot",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "name of test suites source",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "version of checking snapshot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "409": {
            "description": "Organization was not found by provided name.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Test suites source with such name in organization name was not found.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "200": {
            "description": "Successfully checked snapshot with provided values.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/test-suites-sources/{organizationName}/{name}": {
      "get": {
        "tags": [
          "test-suites-source"
        ],
        "summary": "Get test suites source by organization name and it\u0027s name.",
        "description": "Get test suites source by organization name and it\u0027s name.",
        "operationId": "findAsDtoByName",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "name of test suites source",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "409": {
            "description": "Organization was not found by provided name.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestSuitesSourceDto"
                }
              }
            }
          },
          "404": {
            "description": "Test suites source with such name in organization name was not found.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestSuitesSourceDto"
                }
              }
            }
          },
          "200": {
            "description": "Successfully fetched list of test suites sources by organization name.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestSuitesSourceDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestSuitesSourceDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/test-suites-sources/{organizationName}/list-snapshot": {
      "get": {
        "tags": [
          "test-suites-source"
        ],
        "summary": "List of snapshot for all test suites sources in requested organization.",
        "description": "List of snapshot for all test suites sources in requested organization.",
        "operationId": "listSnapshots",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully listed snapshots for all test suites sources in requested organization.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestSuitesSourceSnapshotKey"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Organization was not found by provided name.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestSuitesSourceSnapshotKey"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestSuitesSourceSnapshotKey"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/test-suites-sources/{organizationName}/list": {
      "get": {
        "tags": [
          "test-suites-source"
        ],
        "summary": "List test suites source by organization name.",
        "description": "List test suites source by organization name.",
        "operationId": "list",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "409": {
            "description": "Organization was not found by provided name.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestSuitesSourceDto"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Successfully fetched list of test suites sources by organization name.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestSuitesSourceDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestSuitesSourceDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/test-suites-sources/list-snapshot-by-execution-id": {
      "get": {
        "tags": [
          "test-suites-source"
        ],
        "summary": "List of snapshots of test suites sources which are assigned to execution.",
        "description": "List of snapshots of test suites sources which are assigned to execution.",
        "operationId": "getByExecutionId",
        "parameters": [
          {
            "name": "executionId",
            "in": "query",
            "description": "ID of execution",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "404": {
            "description": "Execution was not found by provided ID.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestSuitesSourceSnapshotKey"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Successfully listed snapshots of test suites sources for requested execution.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestSuitesSourceSnapshotKey"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestSuitesSourceSnapshotKey"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/test-suites-sources/get-standard": {
      "get": {
        "tags": [
          "test-suites-source"
        ],
        "summary": "List of standard test suites sources.",
        "description": "List of standard test suites sources.",
        "operationId": "getStandardTestSuitesSources",
        "parameters": [
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully listed standard test suites sources.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestSuitesSourceDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestSuitesSourceDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/execution": {
      "get": {
        "tags": [
          "execution-controller"
        ],
        "operationId": "getExecution",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Execution"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/allStandardTestSuites": {
      "get": {
        "tags": [
          "test-suites-controller"
        ],
        "operationId": "getAllStandardTestSuites",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestSuiteDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/organizations/{organizationName}/list-git": {
      "get": {
        "tags": [
          "organizations"
        ],
        "summary": "Get organization Gits.",
        "description": "Get a list of organization\u0027s Gits.",
        "operationId": "listGit",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of an organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "404": {
            "description": "Could not find an organization with such name.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GitDto"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Successfully fetched a list of GitDtos.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GitDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GitDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/organization/{organizationName}/list-git": {
      "get": {
        "tags": [
          "organizations"
        ],
        "summary": "Get organization Gits.",
        "description": "Get a list of organization\u0027s Gits.",
        "operationId": "listGit_1",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of an organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "404": {
            "description": "Could not find an organization with such name.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GitDto"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Successfully fetched a list of GitDtos.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GitDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GitDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/organization/{organizationName}/avatar": {
      "get": {
        "tags": [
          "organizations"
        ],
        "summary": "Get avatar by organization name.",
        "description": "Get organization avatar by organization name.",
        "operationId": "avatar",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of an organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched avatar by organization name.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ImageInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ImageInfo"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/organizations/{organizationName}/avatar": {
      "get": {
        "tags": [
          "organizations"
        ],
        "summary": "Get avatar by organization name.",
        "description": "Get organization avatar by organization name.",
        "operationId": "avatar_1",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of an organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched avatar by organization name.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ImageInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ImageInfo"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/organization/{organizationName}": {
      "get": {
        "tags": [
          "organizations"
        ],
        "summary": "Get organization by name.",
        "description": "Get an organization by its name.",
        "operationId": "getOrganizationByName",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of an organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Organization with such name was not found.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "200": {
            "description": "Successfully fetched organization by it\u0027s name.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/organizations/{organizationName}": {
      "get": {
        "tags": [
          "organizations"
        ],
        "summary": "Get organization by name.",
        "description": "Get an organization by its name.",
        "operationId": "getOrganizationByName_1",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of an organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Organization with such name was not found.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "200": {
            "description": "Successfully fetched organization by it\u0027s name.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/organizations/get/list": {
      "get": {
        "tags": [
          "organizations"
        ],
        "summary": "Get organizations by ownerId.",
        "description": "Get list of all organizations where user with ownerId is an owner.",
        "operationId": "getOrganizationsByOwnerId",
        "responses": {
          "200": {
            "description": "Successfully fetched list of organizations.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organization"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organization"
                  }
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/organization/get/list": {
      "get": {
        "tags": [
          "organizations"
        ],
        "summary": "Get organizations by ownerId.",
        "description": "Get list of all organizations where user with ownerId is an owner.",
        "operationId": "getOrganizationsByOwnerId_1",
        "responses": {
          "200": {
            "description": "Successfully fetched list of organizations.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organization"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organization"
                  }
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/users/{userName}": {
      "get": {
        "tags": [
          "users-details-controller"
        ],
        "operationId": "findByName",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{userName}/avatar": {
      "get": {
        "tags": [
          "users-details-controller"
        ],
        "operationId": "avatar_2",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ImageInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/global-role": {
      "get": {
        "tags": [
          "users-details-controller"
        ],
        "operationId": "getSelfGlobalRole",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "ADMIN",
                    "NONE",
                    "OWNER",
                    "SUPER_ADMIN",
                    "VIEWER"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/testLatestExecutions": {
      "get": {
        "tags": [
          "test-executions"
        ],
        "operationId": "getTestExecutionsByStatus",
        "parameters": [
          {
            "name": "executionId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "FAILED",
                "IGNORED",
                "INTERNAL_ERROR",
                "PASSED",
                "READY_FOR_TESTING",
                "RUNNING",
                "TEST_ERROR"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestSuiteExecutionStatisticDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/testExecution/count": {
      "get": {
        "tags": [
          "test-executions"
        ],
        "operationId": "getTestExecutionsCount",
        "parameters": [
          {
            "name": "executionId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "FAILED",
                "IGNORED",
                "INTERNAL_ERROR",
                "PASSED",
                "READY_FOR_TESTING",
                "RUNNING",
                "TEST_ERROR"
              ]
            }
          },
          {
            "name": "testSuite",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/projects/": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Get all avaliable projects.",
        "description": "Get all projects, avaliable for current user.",
        "operationId": "getProjects",
        "parameters": [
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "200": {
            "description": "Projects successfully fetched.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/projects/{organizationName}/{projectName}/users": {
      "get": {
        "tags": [
          "lnk-user-project-controller"
        ],
        "operationId": "getAllUsersByProjectNameAndOrganizationName",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{organizationName}/{projectName}/users/not-from": {
      "get": {
        "tags": [
          "lnk-user-project-controller"
        ],
        "operationId": "getAllUsersNotFromProjectWithNamesStartingWith",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "prefix",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/not-deleted": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Get non-deleted projects.",
        "description": "Get non-deleted projects, avaliable for current user.",
        "operationId": "getNotDeletedProjects",
        "responses": {
          "200": {
            "description": "Successfully fetched non-deleted projects.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/projects/get/projects-by-organization": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Get all projects by organization name.",
        "description": "Get all projects by organization name.",
        "operationId": "getProjectsByOrganizationName",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of an organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched projects by organization name.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/projects/get/organization-name": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Get project by name and organization name.",
        "description": "Get project by name and organization name.",
        "operationId": "getProjectByNameAndOrganizationName",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "name of a project",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of an organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "404": {
            "description": "Could not find project with such name and organization name.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "200": {
            "description": "Successfully fetched project by name and organization name.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permission for accessing given project.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/projects/get/not-deleted-projects-by-organization": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Get non-deleted projects by organization name.",
        "description": "Get non-deleted projects by organization name.",
        "operationId": "getNonDeletedProjectsByOrganizationName",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of an organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched projects by organization name.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/projects/all": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Get all projects.",
        "description": "Get all projects, including deleted and private. Only accessible for super admins",
        "operationId": "getProjects_1",
        "parameters": [
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "200": {
            "description": "Projects successfully fetched.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/organizations/{organizationName}/users": {
      "get": {
        "tags": [
          "roles",
          "organizations"
        ],
        "summary": "Get list of users that are connected with given organization.",
        "description": "Get list of users that are connected with given organization.",
        "operationId": "getAllUsersByOrganizationName",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of an organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "404": {
            "description": "Contest with such name was not found.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserInfo"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Successfully fetched contest by it\u0027s name.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserInfo"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserInfo"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/organizations/{organizationName}/users/not-from": {
      "get": {
        "tags": [
          "roles",
          "organizations"
        ],
        "summary": "Get all users not from organization with names starting with a given prefix.",
        "description": "Get all users not connected with organization with name organizationName whose names start with the same prefix.",
        "operationId": "getAllUsersNotFromOrganizationWithNamesStartingWith",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of an organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "prefix",
            "in": "query",
            "description": "prefix of username",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched list of users",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserInfo"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Requested organization doesn\u0027t exist",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserInfo"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserInfo"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/organizations/can-create-contests": {
      "get": {
        "tags": [
          "roles",
          "organizations"
        ],
        "summary": "Get all user\u0027s organizations that can create contests.",
        "description": "Get all organizations that can create contests where user is a member.",
        "operationId": "getAllUsersOrganizationsThatCanCreateContests",
        "parameters": [
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "403": {
            "description": "User doesn\u0027t have permissions to manage this members",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organization"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Role removed",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organization"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Requested user or organization doesn\u0027t exist",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organization"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organization"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/organizations/by-user/not-deleted": {
      "get": {
        "tags": [
          "roles",
          "organizations"
        ],
        "summary": "Get user\u0027s organizations.",
        "description": "Get not deleted organizations where user is a member, and his roles in those organizations.",
        "operationId": "getOrganizationWithRoles",
        "parameters": [
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "404": {
            "description": "Could not find user with this id.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationDto"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Successfully fetched organization infos.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/latestExecution": {
      "get": {
        "tags": [
          "execution-controller"
        ],
        "operationId": "getLatestExecutionForProject",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/getTestRootPathByExecutionId": {
      "get": {
        "tags": [
          "execution-controller"
        ],
        "operationId": "getTestRootPathByExecutionId",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/{organizationName}/{projectName}/list": {
      "get": {
        "tags": [
          "download-files-controller"
        ],
        "operationId": "list_1",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executionDto": {
      "get": {
        "tags": [
          "execution-controller"
        ],
        "operationId": "getExecutionDto",
        "parameters": [
          {
            "name": "executionId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executionDtoList": {
      "get": {
        "tags": [
          "execution-controller"
        ],
        "operationId": "getExecutionByProject",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExecutionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contests/{organizationName}/{projectName}/eligible-contests": {
      "get": {
        "tags": [
          "lnk-contest-project-controller"
        ],
        "operationId": "getAvaliableContestsForProject",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contests/{organizationName}/{projectName}/best": {
      "get": {
        "tags": [
          "lnk-contest-project-controller"
        ],
        "operationId": "getBestProjectContests",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 4
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContestResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contests/{contestName}": {
      "get": {
        "tags": [
          "contests"
        ],
        "summary": "Get contest by name.",
        "description": "Get contest by name.",
        "operationId": "getContestByName",
        "parameters": [
          {
            "name": "contestName",
            "in": "path",
            "description": "name of a contest",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "404": {
            "description": "Contest with such name was not found.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContestDto"
                }
              }
            }
          },
          "200": {
            "description": "Successfully fetched contest by it\u0027s name.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContestDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContestDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/contests/{contestName}/scores": {
      "get": {
        "tags": [
          "lnk-contest-project-controller"
        ],
        "operationId": "getRatingsInContest",
        "parameters": [
          {
            "name": "contestName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContestResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contests/{contestName}/public-test": {
      "get": {
        "tags": [
          "contests"
        ],
        "summary": "Get public test for contest with given name.",
        "description": "Get public test for contest with given name.",
        "operationId": "getPublicTestForContest",
        "parameters": [
          {
            "name": "contestName",
            "in": "path",
            "description": "name of a contest",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "404": {
            "description": "Either contest with such name was not found or tests are not provided.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestFilesContent"
                }
              }
            }
          },
          "200": {
            "description": "Successfully fetched public tests.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestFilesContent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestFilesContent"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/contests/{contestName}/enroll": {
      "get": {
        "tags": [
          "lnk-contest-project-controller"
        ],
        "operationId": "enrollForContest",
        "parameters": [
          {
            "name": "contestName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contests/{contestName}/eligible-projects": {
      "get": {
        "tags": [
          "lnk-contest-project-controller"
        ],
        "operationId": "getAvaliableProjectsForContest",
        "parameters": [
          {
            "name": "contestName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contests/finished": {
      "get": {
        "tags": [
          "contests"
        ],
        "summary": "Get list of contests that has already finished.",
        "description": "Get list of contests that has already finished.",
        "operationId": "getFinishedContests",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "amount of contests that should be returned, default: 10",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched list of finished contests.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContestDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContestDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/contests/by-organization": {
      "get": {
        "tags": [
          "contests"
        ],
        "summary": "Get contests connected with given organization.",
        "description": "Get contests connected with given organization.",
        "operationId": "getOrganizationContests",
        "parameters": [
          {
            "name": "organizationName",
            "in": "query",
            "description": "name of an organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "amount of records that will be returned",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Either contest with such name was not found or tests are not provided.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContestDto"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Successfully fetched public tests.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContestDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContestDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/contests/active": {
      "get": {
        "tags": [
          "contests"
        ],
        "summary": "Get list of contests that are in progress now.",
        "description": "Get list of contests that are in progress now.",
        "operationId": "getContestsInProgress",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "amount of contests that should be returned, default: 10",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContestDto"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Successfully fetched list of active contests.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContestDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/check-git-connectivity-adaptor": {
      "get": {
        "tags": [
          "check-git-connectivity-controller"
        ],
        "operationId": "checkGitConnectivity",
        "parameters": [
          {
            "name": "user",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/awesome-benchmarks": {
      "get": {
        "tags": [
          "awesome-benchmarks-controller"
        ],
        "operationId": "getAllAwesomeBenchmarks",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AwesomeBenchmarks"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/organization/{organizationName}/delete-git": {
      "delete": {
        "tags": [
          "organizations"
        ],
        "summary": "Upsert organization git.",
        "description": "Upsert organization git.",
        "operationId": "deleteGit",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of an organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "url",
            "in": "query",
            "description": "url of a git",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "403": {
            "description": "Not enough permission for deleting organization git credentials.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "Successfully deleted an organization git credentials.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Could not find an organization with such name.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/organizations/{organizationName}/delete-git": {
      "delete": {
        "tags": [
          "organizations"
        ],
        "summary": "Upsert organization git.",
        "description": "Upsert organization git.",
        "operationId": "deleteGit_1",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of an organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "url",
            "in": "query",
            "description": "url of a git",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "403": {
            "description": "Not enough permission for deleting organization git credentials.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "Successfully deleted an organization git credentials.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Could not find an organization with such name.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/organization/{organizationName}/delete": {
      "delete": {
        "tags": [
          "organizations"
        ],
        "summary": "Delete existing organization.",
        "description": "Delete existing organization by its name.",
        "operationId": "deleteOrganization",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of an organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an organization.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permission for deleting this organization.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Could not find an organization with such name.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/organizations/{organizationName}/delete": {
      "delete": {
        "tags": [
          "organizations"
        ],
        "summary": "Delete existing organization.",
        "description": "Delete existing organization by its name.",
        "operationId": "deleteOrganization_1",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of an organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an organization.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permission for deleting this organization.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Could not find an organization with such name.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/projects/{organizationName}/{projectName}/users/roles/{userName}": {
      "delete": {
        "tags": [
          "projects",
          "roles"
        ],
        "summary": "Removes user\u0027s role on a particular project",
        "description": "Removes user\u0027s role on a particular project",
        "operationId": "removeRole",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of an organization in which given project is in",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "name of a project",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userName",
            "in": "path",
            "description": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "403": {
            "description": "User doesn\u0027t have permissions to manage this members",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "404": {
            "description": "Requested user or project doesn\u0027t exist",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "200": {
            "description": "Permission removed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/projects/{organizationName}/{projectName}/delete": {
      "delete": {
        "tags": [
          "projects"
        ],
        "summary": "Delete a project.",
        "description": "Delete a project.",
        "operationId": "deleteProject",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "403": {
            "description": "Not enough permission for project deletion.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "Successfully deleted a project.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Either could not find such organization or such project in such organization.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/organizations/{organizationName}/users/roles/{userName}": {
      "delete": {
        "tags": [
          "roles",
          "organizations"
        ],
        "summary": "Remove user\u0027s role in organization with given name.",
        "description": "Remove user\u0027s role in organization with given name.",
        "operationId": "removeRole_1",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "description": "name of an organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userName",
            "in": "path",
            "description": "name of user whose role is requested to be removed",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Authorization-Source",
            "in": "header",
            "required": true,
            "example": "basic"
          }
        ],
        "responses": {
          "403": {
            "description": "User doesn\u0027t have permissions to manage this members",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "Role was successfully removed",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Requested user or organization doesn\u0027t exist",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/api/v1/files/{organizationName}/{projectName}/{creationTimestamp}": {
      "delete": {
        "tags": [
          "download-files-controller"
        ],
        "operationId": "delete",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "creationTimestamp",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Unit": {
        "type": "object"
      },
      "Part": {
        "type": "object"
      },
      "GitDto": {
        "required": [
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "TestSuitesSourceDto": {
        "required": [
          "branch",
          "gitDto",
          "name",
          "organizationName",
          "testRootPath"
        ],
        "type": "object",
        "properties": {
          "organizationName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "gitDto": {
            "$ref": "#/components/schemas/GitDto"
          },
          "branch": {
            "type": "string"
          },
          "testRootPath": {
            "type": "string"
          }
        }
      },
      "Organization": {
        "required": [
          "canCreateContests",
          "name",
          "status"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "CREATED",
              "DELETED"
            ]
          },
          "ownerId": {
            "type": "integer",
            "format": "int64"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "avatar": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "canCreateContests": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "OrganizationDto": {
        "required": [
          "canCreateContests",
          "description",
          "name",
          "userRoles"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "avatar": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "canCreateContests": {
            "type": "boolean"
          },
          "userRoles": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "enum": [
                "ADMIN",
                "NONE",
                "OWNER",
                "SUPER_ADMIN",
                "VIEWER"
              ]
            }
          }
        }
      },
      "UserInfo": {
        "required": [
          "name",
          "organizations",
          "projects"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "projects": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "enum": [
                "ADMIN",
                "NONE",
                "OWNER",
                "SUPER_ADMIN",
                "VIEWER"
              ]
            }
          },
          "organizations": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "enum": [
                "ADMIN",
                "NONE",
                "OWNER",
                "SUPER_ADMIN",
                "VIEWER"
              ]
            }
          },
          "email": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "linkedin": {
            "type": "string"
          },
          "gitHub": {
            "type": "string"
          },
          "twitter": {
            "type": "string"
          },
          "globalRole": {
            "type": "string",
            "enum": [
              "ADMIN",
              "NONE",
              "OWNER",
              "SUPER_ADMIN",
              "VIEWER"
            ]
          }
        }
      },
      "TestResultLocation": {
        "required": [
          "pluginName",
          "testLocation",
          "testName",
          "testSuiteName"
        ],
        "type": "object",
        "properties": {
          "testSuiteName": {
            "type": "string"
          },
          "pluginName": {
            "type": "string"
          },
          "testLocation": {
            "type": "string"
          },
          "testName": {
            "type": "string"
          }
        }
      },
      "TestExecutionDto": {
        "required": [
          "filePath",
          "pluginName",
          "status",
          "tags"
        ],
        "type": "object",
        "properties": {
          "filePath": {
            "type": "string"
          },
          "pluginName": {
            "type": "string"
          },
          "agentContainerId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "FAILED",
              "IGNORED",
              "INTERNAL_ERROR",
              "PASSED",
              "READY_FOR_TESTING",
              "RUNNING",
              "TEST_ERROR"
            ]
          },
          "startTimeSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "endTimeSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "testSuiteName": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "unmatched": {
            "type": "integer",
            "format": "int64"
          },
          "matched": {
            "type": "integer",
            "format": "int64"
          },
          "expected": {
            "type": "integer",
            "format": "int64"
          },
          "unexpected": {
            "type": "integer",
            "format": "int64"
          },
          "hasDebugInfo": {
            "type": "boolean"
          },
          "executionId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TestExecutionFilters": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "FAILED",
              "IGNORED",
              "INTERNAL_ERROR",
              "PASSED",
              "READY_FOR_TESTING",
              "RUNNING",
              "TEST_ERROR"
            ]
          },
          "fileName": {
            "type": "string"
          },
          "testSuite": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          }
        }
      },
      "ExecutionRequest": {
        "required": [
          "gitDto",
          "project",
          "sdk",
          "testRootPath"
        ],
        "type": "object",
        "properties": {
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "gitDto": {
            "$ref": "#/components/schemas/GitDto"
          },
          "branchOrCommit": {
            "type": "string"
          },
          "testRootPath": {
            "type": "string"
          },
          "sdk": {
            "$ref": "#/components/schemas/Sdk"
          },
          "executionId": {
            "type": "integer",
            "format": "int64"
          },
          "execCmd": {
            "type": "string"
          },
          "batchSizeForAnalyzer": {
            "type": "string"
          }
        }
      },
      "Project": {
        "required": [
          "contestRating",
          "name",
          "numberOfContainers",
          "organization",
          "public",
          "status"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "CREATED",
              "DELETED"
            ]
          },
          "public": {
            "type": "boolean"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string"
          },
          "numberOfContainers": {
            "type": "integer",
            "format": "int32"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "contestRating": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Sdk": {
        "required": [
          "name",
          "version"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "ShortFileInfo": {
        "required": [
          "isExecutable",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "isExecutable": {
            "type": "boolean"
          }
        }
      },
      "SetRoleRequest": {
        "required": [
          "role",
          "userName"
        ],
        "type": "object",
        "properties": {
          "userName": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMIN",
              "NONE",
              "OWNER",
              "SUPER_ADMIN",
              "VIEWER"
            ]
          }
        },
        "description": "pair of userName and role that is requested to be set"
      },
      "ProjectDto": {
        "required": [
          "description",
          "email",
          "isPublic",
          "name",
          "organizationName",
          "url"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "organizationName": {
            "type": "string"
          },
          "isPublic": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "ImageInfo": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          }
        }
      },
      "FileInfo": {
        "required": [
          "isExecutable",
          "name",
          "sizeBytes",
          "uploadedMillis"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "uploadedMillis": {
            "type": "integer",
            "format": "int64"
          },
          "sizeBytes": {
            "type": "integer",
            "format": "int64"
          },
          "isExecutable": {
            "type": "boolean"
          }
        }
      },
      "ExecutionRequestForStandardSuites": {
        "required": [
          "project",
          "sdk",
          "testSuites"
        ],
        "type": "object",
        "properties": {
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "testSuites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sdk": {
            "$ref": "#/components/schemas/Sdk"
          },
          "execCmd": {
            "type": "string"
          },
          "batchSizeForAnalyzer": {
            "type": "string"
          },
          "executionId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ContestDto": {
        "required": [
          "name",
          "organizationName"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "organizationName": {
            "type": "string"
          }
        },
        "description": "contest requested for creation"
      },
      "TestSuitesSourceSnapshotKey": {
        "required": [
          "creationTimeInMills",
          "organizationName",
          "testSuitesSourceName",
          "version"
        ],
        "type": "object",
        "properties": {
          "organizationName": {
            "type": "string"
          },
          "testSuitesSourceName": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "creationTimeInMills": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Git": {
        "required": [
          "organization",
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TestSuite": {
        "required": [
          "name",
          "source",
          "version"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/TestSuitesSource"
          },
          "version": {
            "type": "string"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time"
          },
          "language": {
            "type": "string"
          },
          "tags": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TestSuitesSource": {
        "required": [
          "branch",
          "git",
          "name",
          "organization",
          "testRootPath"
        ],
        "type": "object",
        "properties": {
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "git": {
            "$ref": "#/components/schemas/Git"
          },
          "branch": {
            "type": "string"
          },
          "testRootPath": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Execution": {
        "required": [
          "additionalFiles",
          "allTests",
          "expectedChecks",
          "failedTests",
          "matchedChecks",
          "passedTests",
          "project",
          "runningTests",
          "sdk",
          "skippedTests",
          "startTime",
          "status",
          "type",
          "unexpectedChecks",
          "unmatchedChecks"
        ],
        "type": "object",
        "properties": {
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "FINISHED",
              "PENDING",
              "RUNNING"
            ]
          },
          "testSuiteIds": {
            "type": "string"
          },
          "batchSize": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "enum": [
              "GIT",
              "STANDARD"
            ]
          },
          "version": {
            "type": "string"
          },
          "allTests": {
            "type": "integer",
            "format": "int64"
          },
          "runningTests": {
            "type": "integer",
            "format": "int64"
          },
          "passedTests": {
            "type": "integer",
            "format": "int64"
          },
          "failedTests": {
            "type": "integer",
            "format": "int64"
          },
          "skippedTests": {
            "type": "integer",
            "format": "int64"
          },
          "unmatchedChecks": {
            "type": "integer",
            "format": "int64"
          },
          "matchedChecks": {
            "type": "integer",
            "format": "int64"
          },
          "expectedChecks": {
            "type": "integer",
            "format": "int64"
          },
          "unexpectedChecks": {
            "type": "integer",
            "format": "int64"
          },
          "sdk": {
            "type": "string"
          },
          "additionalFiles": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "execCmd": {
            "type": "string"
          },
          "batchSizeForAnalyzer": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "User": {
        "required": [
          "source"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "linkedin": {
            "type": "string"
          },
          "gitHub": {
            "type": "string"
          },
          "twitter": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TestSuiteDto": {
        "required": [
          "name",
          "source",
          "version"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/TestSuitesSourceDto"
          },
          "version": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TestSuiteExecutionStatisticDto": {
        "required": [
          "countTest",
          "countWithStatusTest",
          "status",
          "testSuiteName"
        ],
        "type": "object",
        "properties": {
          "testSuiteName": {
            "type": "string"
          },
          "countTest": {
            "type": "integer",
            "format": "int32"
          },
          "countWithStatusTest": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "enum": [
              "FAILED",
              "IGNORED",
              "INTERNAL_ERROR",
              "PASSED",
              "READY_FOR_TESTING",
              "RUNNING",
              "TEST_ERROR"
            ]
          }
        }
      },
      "ExecutionDto": {
        "required": [
          "allTests",
          "expectedChecks",
          "failedTests",
          "id",
          "matchedChecks",
          "passedTests",
          "runningTests",
          "skippedTests",
          "startTime",
          "status",
          "type",
          "unexpectedChecks",
          "unmatchedChecks"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "FINISHED",
              "PENDING",
              "RUNNING"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "GIT",
              "STANDARD"
            ]
          },
          "version": {
            "type": "string"
          },
          "startTime": {
            "type": "integer",
            "format": "int64"
          },
          "endTime": {
            "type": "integer",
            "format": "int64"
          },
          "allTests": {
            "type": "integer",
            "format": "int64"
          },
          "runningTests": {
            "type": "integer",
            "format": "int64"
          },
          "passedTests": {
            "type": "integer",
            "format": "int64"
          },
          "failedTests": {
            "type": "integer",
            "format": "int64"
          },
          "skippedTests": {
            "type": "integer",
            "format": "int64"
          },
          "unmatchedChecks": {
            "type": "integer",
            "format": "int64"
          },
          "matchedChecks": {
            "type": "integer",
            "format": "int64"
          },
          "expectedChecks": {
            "type": "integer",
            "format": "int64"
          },
          "unexpectedChecks": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ContestResult": {
        "required": [
          "contestName",
          "organizationName",
          "projectName"
        ],
        "type": "object",
        "properties": {
          "projectName": {
            "type": "string"
          },
          "organizationName": {
            "type": "string"
          },
          "contestName": {
            "type": "string"
          },
          "score": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "TestFilesContent": {
        "required": [
          "tags",
          "testLines"
        ],
        "type": "object",
        "properties": {
          "testLines": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "expectedLines": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "language": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AwesomeBenchmarks": {
        "required": [
          "category",
          "description",
          "documentation",
          "homepage",
          "language",
          "license",
          "name",
          "scenarios_num",
          "sources",
          "tags"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": [
              "ALL",
              "AI",
              "AUDIT",
              "CODING_STANDARD",
              "PERFORMANCE",
              "STATIC_ANALYSIS"
            ]
          },
          "tags": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "license": {
            "type": "string"
          },
          "scenarios_num": {
            "type": "integer",
            "format": "int64"
          },
          "description": {
            "type": "string"
          },
          "homepage": {
            "type": "string"
          },
          "sources": {
            "type": "string"
          },
          "documentation": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    "securitySchemes": {
      "basic": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}