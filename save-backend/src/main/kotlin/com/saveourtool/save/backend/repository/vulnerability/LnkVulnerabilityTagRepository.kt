package com.saveourtool.save.backend.repository.vulnerability

import com.saveourtool.save.entities.vulnerabilities.LnkVulnerabilityTag
import com.saveourtool.save.entities.vulnerabilities.Vulnerability
import com.saveourtool.save.spring.repository.BaseEntityRepository
import org.springframework.data.domain.Pageable
import org.springframework.stereotype.Repository

/**
 * [BaseEntityRepository] for [LnkVulnerabilityTag]
 */
@Repository
interface LnkVulnerabilityTagRepository : BaseEntityRepository<LnkVulnerabilityTag> {
    /**
     * @param tagName tag
     * @return list of [LnkVulnerabilityTag] links to vulnerability
     */
    fun findByTagName(tagName: String): List<LnkVulnerabilityTag>

    /**
     * @param tagNames [Set] of tags
     * @return list of [LnkVulnerabilityTag] links to vulnerability
     */
    fun findByTagNameIn(tagNames: Set<String>): List<LnkVulnerabilityTag>

    /**
     * @param vulnerabilityId id of vulnerability
     * @return list of [LnkVulnerabilityTag] links to vulnerability
     */
    fun findByVulnerabilityId(vulnerabilityId: Long): List<LnkVulnerabilityTag>

    /**
     * @param vulnerabilityIds [List] of [Vulnerability.id]s
     * @return list of [LnkVulnerabilityTag] links to vulnerability
     */
    fun findByVulnerabilityIdIn(vulnerabilityIds: List<Long>): List<LnkVulnerabilityTag>

    /**
     * @param vulnerabilityId id of vulnerability
     * @param tagName tag
     * @return [LnkVulnerabilityTag]
     */
    fun findByVulnerabilityIdAndTagName(vulnerabilityId: Long, tagName: String): LnkVulnerabilityTag?

    /**
     * @param prefix [LnkVulnerabilityTag.tag] name prefix
     * @param page
     * @return [List] of [LnkVulnerabilityTag]s with name that starts with [prefix]
     */
    fun findAllByTagNameStartingWith(prefix: String, page: Pageable): List<LnkVulnerabilityTag>
}
