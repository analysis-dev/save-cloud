package com.saveourtool.save.backend.controllers.vulnerability

import com.saveourtool.save.backend.service.vulnerability.VulnerabilityProjectService
import com.saveourtool.save.configs.ApiSwaggerSupport
import com.saveourtool.save.entities.vulnerabilities.VulnerabilityProject
import com.saveourtool.save.entities.vulnerability.VulnerabilityProjectDto
import com.saveourtool.save.utils.blockingToMono
import com.saveourtool.save.v1
import io.swagger.v3.oas.annotations.Operation
import io.swagger.v3.oas.annotations.responses.ApiResponse
import io.swagger.v3.oas.annotations.tags.Tag
import io.swagger.v3.oas.annotations.tags.Tags
import org.springframework.security.access.prepost.PreAuthorize
import org.springframework.web.bind.annotation.*
import reactor.core.publisher.Mono

typealias VulnerabilityProjectDtoList = List<VulnerabilityProjectDto>

/**
 * Controller for working with vulnerability projects.
 */
@ApiSwaggerSupport
@Tags(
    Tag(name = "vulnerability projects"),
)
@RestController
@RequestMapping(path = ["/api/$v1/vulnerability-projects"])
class VulnerabilityProjectController(
    private val vulnerabilityProjectService: VulnerabilityProjectService,
) {
    @GetMapping("/by-vulnerability-name")
    @PreAuthorize("permitAll()")
    @Operation(
        method = "GET",
        summary = "Get all vulnerability projects.",
        description = "Get link projects by vulnerability name.",
    )
    @ApiResponse(responseCode = "200", description = "Successfully fetched all vulnerability project")
    fun getAllVulnerabilityProjects(
        @RequestParam vulnerabilityName: String,
    ): Mono<VulnerabilityProjectDtoList> = blockingToMono {
        vulnerabilityProjectService.findByVulnerabilityName(vulnerabilityName).map(
            VulnerabilityProject::toDto
        )
    }
}
