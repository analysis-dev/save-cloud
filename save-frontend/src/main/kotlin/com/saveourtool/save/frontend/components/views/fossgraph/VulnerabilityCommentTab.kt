@file:Suppress("FILE_NAME_MATCH_CLASS")

package com.saveourtool.save.frontend.components.views.fossgraph

import com.saveourtool.save.entities.CommentDto
import com.saveourtool.save.entities.vulnerability.VulnerabilityDto
import com.saveourtool.save.frontend.components.basic.commentWindow
import com.saveourtool.save.frontend.components.basic.newCommentWindow
import com.saveourtool.save.frontend.utils.*

import react.FC
import react.Props
import react.dom.html.ReactHTML.div
import react.useState
import web.cssom.ClassName

import kotlinx.browser.window

val vulnerabilityCommentTab: FC<VulnerabilityCommentTabProps> = FC { props ->

    val (comments, setComments) = useState(emptyList<CommentDto>())

    useRequest {
        val newComments = post(
            url = "$apiUrl/comments/get-all",
            headers = jsonHeaders,
            body = window.location.hash,
            loadingHandler = ::loadingHandler,
        ).unsafeMap {
            it.decodeFromJsonString<List<CommentDto>>()
        }

        setComments(newComments)
    }

    val enrollCommentsRequest = useDeferredRequest {
        val newComments = post(
            url = "$apiUrl/comments/get-all",
            headers = jsonHeaders,
            body = window.location.hash,
            loadingHandler = ::loadingHandler,
        ).unsafeMap {
            it.decodeFromJsonString<List<CommentDto>>()
        }

        setComments(newComments)
    }

    div {
        className = ClassName("col-12 mt-4")
        newCommentWindow {
            addComment = { enrollCommentsRequest() }
        }
    }

    comments.forEach { message ->
        div {
            className = ClassName("col-12 mt-4")
            commentWindow {
                comment = message
            }
        }
    }
}

/**
 * [Props] of vulnerability comment tab component
 */
external interface VulnerabilityCommentTabProps : Props {
    /**
     * Vulnerability dto of vulnerability
     */
    var vulnerability: VulnerabilityDto
}
