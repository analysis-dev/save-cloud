@file:Suppress("FILE_NAME_MATCH_CLASS", "HEADER_MISSING_IN_NON_SINGLE_CLASS_FILE")

package com.saveourtool.cosv.frontend.components.views.vuln

import com.saveourtool.frontend.common.components.tables.*
import com.saveourtool.frontend.common.components.tables.TABLE_HEADERS_LOCALE_NAMESPACE
import com.saveourtool.frontend.common.components.tables.tableComponent
import com.saveourtool.frontend.common.externals.i18next.useTranslation
import com.saveourtool.frontend.common.utils.*
import com.saveourtool.save.entities.cosv.CosvFileDto
import com.saveourtool.save.utils.toUnixCalendarFormat

import react.*
import react.dom.html.ReactHTML.td
import web.cssom.ClassName

val vulnerabilityHistoryTab: FC<VulnerabilityHistoryTabProps> = FC { props ->

    val (t, i18n) = useTranslation(TABLE_HEADERS_LOCALE_NAMESPACE)

    @Suppress(
        "STRING_TEMPLATE_QUOTES",
        "TYPE_ALIAS",
    )
    val cosvVersionsTable: FC<TableProps<CosvFileDto>> = useMemo(i18n.language) {
        tableComponent(
            columns = {
                columns {
                    column(id = "version", header = "Version".t(), { identifier }) { cellContext ->
                        Fragment.create {
                            td {
                                val index = cellContext.row.index + 1 + cellContext.pageIndex * cellContext.pageSize
                                +"$index"
                            }
                        }
                    }
                    column(id = "date", header = "Updated date".t(), { modified }) { cellContext ->
                        Fragment.create {
                            td {
                                className = ClassName("align-middle")
                                +cellContext.row.original.modified.toUnixCalendarFormat()
                            }
                        }
                    }
                }
            },
            isTransparentGrid = true,
        )
    }

    cosvVersionsTable {
        getData = { _, _ ->
            get(
                url = "$apiUrl/cosv/list-versions?identifier=${props.identifier}",
                headers = jsonHeaders,
                loadingHandler = ::loadingHandler,
            )
                .unsafeMap {
                    it.decodeFromJsonString()
                }
        }
    }
}

/**
 * [Props] of vulnerability history tab component
 */
external interface VulnerabilityHistoryTabProps : Props {
    /**
     * Vulnerability identifier
     */
    var identifier: String
}
