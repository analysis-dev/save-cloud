[versions]
kotlin = "1.5.31"
save-core = "0.2.3"
ktor = "1.6.3"
okio = "3.0.0-alpha.10"
serialization = "1.2.2"
kotlinx-datetime = "0.2.1"
kotlinx-coroutines = "1.5.2"
kotlin-wrappers = "0.0.1-pre.247-kotlin-1.5.31"
spring-boot = "2.5.4"
spring-security = "5.5.2"
junit = "5.8.1"
ktoml = "0.2.7"
multiplatform-diff = "0.3.0"
kotlinpoet = "1.8.0"
diktat = "1.0.0-rc.4"
detekt = "1.17.1"
liquibase-core = "4.3.5"
docker-java = "3.2.12"
jgit = "5.13.0.202109080827-r"
reactor = "1.1.4"
jackson = "2.12.3"
mockito-kotlin = "3.2.0"
slf4j = "1.7.32"
logback = "1.2.3"
micrometer = "1.7.4"
jpa = "1.0.2"
hibernate = "5.4.2.Final"
liquibase = "4.3.5"
mySql = "8.0.20"
testcontainers = "1.16.0"
okhttp3 = "4.9.1"
reckon = "0.13.0"
commons-compress = "1.21"

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-plugin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-plugin-jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
diktat = { id = "org.cqfn.diktat.diktat-gradle-plugin", version.ref = "diktat" }
liquibase-gradle = { id = "org.liquibase.gradle", version = "2.0.4" }
versions-plugin = { id = "com.github.ben-manes.versions", version = "0.39.0" }
talaiot-base = { id = "com.cdsap.talaiot.plugin.base", version = "1.4.2" }

[libraries]
save-common = { module = "org.cqfn.save:save-common", version.ref = "save-core" }
save-common-jvm = { module = "org.cqfn.save:save-common-jvm", version.ref = "save-core" }
save-core = { module = "org.cqfn.save:save-core", version.ref = "save-core" }
save-core-jvm = { module = "org.cqfn.save:save-core-jvm", version.ref = "save-core" }
save-plugins-fix = { module = "org.cqfn.save:fix-plugin", version.ref = "save-core" }
save-plugins-fix-jvm = { module = "org.cqfn.save:fix-plugin-jvm", version.ref = "save-core" }
save-plugins-warn-jvm = { module = "org.cqfn.save:warn-plugin-jvm", version.ref = "save-core" }
save-plugins-fixAndWarn-jvm = { module = "org.cqfn.save:fix-and-warn-plugin-jvm", version.ref = "save-core" }
save-reporters = { module = "org.cqfn.save:save-reporters", version.ref = "save-core" }

kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-plugin-serialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
kotlin-plugin-allopen = { module = "org.jetbrains.kotlin:kotlin-allopen", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-wrappers-bom = { module = "org.jetbrains.kotlin-wrappers:kotlin-wrappers-bom", version.ref = "kotlin-wrappers" }

kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
kotlinx-serialization-json-jvm = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json-jvm", version.ref = "serialization" }
kotlinx-serialization-properties = { module = "org.jetbrains.kotlinx:kotlinx-serialization-properties", version.ref = "serialization" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }

spring-boot-starter-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux", version.ref = "spring-boot" }
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "spring-boot" }
spring-boot-starter-quartz = { module = "org.springframework.boot:spring-boot-starter-quartz", version.ref = "spring-boot" }
spring-security-core = { module = "org.springframework.security:spring-security-core", version.ref = "spring-security" }
spring-boot-gradle-plugin = { module = "org.springframework.boot:spring-boot-gradle-plugin", version.ref = "spring-boot" }
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-curl = { module = "io.ktor:ktor-client-curl", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }

# database
hibernate-jpa21-api = { module = "org.hibernate.javax.persistence:hibernate-jpa-2.1-api", version.ref = "jpa" }
hibernate-core = { module = "org.hibernate:hibernate-core", version.ref = "hibernate" }
liquibase-core = { module = "org.liquibase:liquibase-core", version.ref = "liquibase-core" }
mysql-connector-java = { module = "mysql:mysql-connector-java", version.ref = "mySql" }

# testing
testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-mysql = { module = "org.testcontainers:mysql", version.ref = "testcontainers" }
testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp3" }
okhttp-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp3" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito-kotlin" }

okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
reactor-kotlin-extensions = { module = "io.projectreactor.kotlin:reactor-kotlin-extensions", version.ref = "reactor" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
logback-core = { module = "ch.qos.logback:logback-core", version.ref = "logback" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
ktoml-core = { module = "com.akuleshov7:ktoml-core", version.ref = "ktoml" }
ktoml-file = { module = "com.akuleshov7:ktoml-file", version.ref = "ktoml" }
multiplatform-diff = { module = "io.github.petertrr:kotlin-multiplatform-diff", version.ref = "multiplatform-diff" }
square-kotlinpoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinpoet" }
dockerJava-core = { module = "com.github.docker-java:docker-java-core", version.ref = "docker-java" }
dockerJava-transport-httpclient5 = { module = "com.github.docker-java:docker-java-transport-httpclient5", version.ref = "docker-java" }
jgit = { module = "org.eclipse.jgit:org.eclipse.jgit", version.ref = "jgit" }
micrometer-registry-prometheus = { module = "io.micrometer:micrometer-registry-prometheus", version.ref = "micrometer" }
diktat-gradle-plugin = { module = "org.cqfn.diktat:diktat-gradle-plugin", version.ref = "diktat" }
detekt-gradle-plugin = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
reckon-gradle-plugin = { module = "org.ajoberstar.reckon:reckon-gradle", version.ref = "reckon" }
commons-compress = { module = "org.apache.commons:commons-compress", version.ref = "commons-compress" }