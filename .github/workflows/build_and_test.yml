name: Build and test

on:
  pull_request:
  push:
    branches:
      - 'master'
      
concurrency:
  # https://docs.github.com/en/actions/using-jobs/using-concurrency
  # The latest queued workflow is preferred; the ones already in progress get cancelled
  # Workflows on master branch shouldn't be cancelled, that's why they are identified by commit SHA
  group: ${{ github.ref == 'refs/heads/master' && format('{0}-{1}', github.workflow, github.sha) || format('{0}-{1}', github.workflow, github.ref) }}
  cancel-in-progress: true

jobs:
  build_and_test_with_code_coverage:
    name: Build, test and upload code coverage
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
        with:
          # required for correct codecov upload
          fetch-depth: 0
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin
      - name: Install system packages
        # libcurl is needed for ktor-client-curl, libc-bin for orchestrator
        run: sudo apt-get update && sudo apt-get install -y libcurl4-openssl-dev libc-bin
      - name: Cache konan
        uses: actions/cache@v3
        with:
          path: ~/.konan
          key: ${{ runner.os }}-gradle-konan-1.7.0
      # https://gvisor.dev/docs/user_guide/install/
      - name: Install gvisor runsc runtime
        run: |
          ARCH=$(uname -m)
          URL=https://storage.googleapis.com/gvisor/releases/release/latest/${ARCH}
          wget -nv ${URL}/runsc ${URL}/runsc.sha512 \
            ${URL}/containerd-shim-runsc-v1 ${URL}/containerd-shim-runsc-v1.sha512
          sha512sum -c runsc.sha512 \
            -c containerd-shim-runsc-v1.sha512
          rm -f *.sha512
          chmod a+rx runsc containerd-shim-runsc-v1
          sudo mv runsc containerd-shim-runsc-v1 /usr/local/bin
          sudo /usr/local/bin/runsc install
          sudo systemctl reload docker
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          arguments: |
            build
            -x detekt
            -x spotlessCheck
            -x :save-agent:linkDebugExecutableLinuxX64
            -Porg.gradle.caching=true
            -Pdetekt.multiplatform.disabled=true
            -PgprUser=${{ github.actor }}
            -PgprKey=${{ secrets.GITHUB_TOKEN }}
            --scan

      - name: Upload gradle reports
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: gradle-reports
          path: '**/build/reports/'
          retention-days: 1
      - name: Upload frontend distribution
        uses: actions/upload-artifact@v3
        with:
          name: save-frontend
          path: 'save-frontend/build/libs/save-frontend-*-distribution.jar'
          retention-days: 1
      - name: Code coverage report
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false
