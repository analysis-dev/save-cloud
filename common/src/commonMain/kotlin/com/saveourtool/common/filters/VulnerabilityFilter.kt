package com.saveourtool.common.filters

import com.saveourtool.common.entities.vulnerability.VulnerabilityLanguage
import com.saveourtool.common.entities.vulnerability.VulnerabilityStatus
import kotlinx.serialization.Serializable

/**
 * @property freeText
 * @property statuses
 * @property tags
 * @property minCriticality
 * @property maxCriticality
 * @property language
 * @property chosenStatuses
 * @property authorName
 * @property organizationName
 */
@Serializable
data class VulnerabilityFilter(
    val freeText: String = "",
    val statuses: List<VulnerabilityStatus>? = null,
    val tags: Set<String> = emptySet(),
    val minCriticality: Float = 0.0f,
    val maxCriticality: Float = 10.0f,
    val language: VulnerabilityLanguage? = null,
    val chosenStatuses: List<VulnerabilityStatus>? = null,
    val authorName: String? = null,
    val organizationName: String? = null,
) {
    companion object {
        val empty = VulnerabilityFilter()
        val approved = VulnerabilityFilter(statuses = listOf(VulnerabilityStatus.APPROVED, VulnerabilityStatus.AUTO_APPROVED))
        val pendingApproval = VulnerabilityFilter(statuses = listOf(VulnerabilityStatus.CREATED, VulnerabilityStatus.PENDING_REVIEW))
    }
}
