package com.saveourtool.save.entities.vulnerabilities

import com.saveourtool.save.entities.vulnerability.VulnerabilityDto
import com.saveourtool.save.spring.entity.BaseEntityWithDateAndDto

import com.fasterxml.jackson.annotation.JsonIgnore

import javax.persistence.*

/**
 * @property name name of vulnerability
 * @property description name of vulnerability
 * @property progress vulnerability criticality percentage (1..100)
 * @property projects links to projects with this vulnerability
 * @property isActive admin vulnerability check flag
 * @property userId creator vulnerability
 **/
@Entity
class Vulnerability(

    var name: String,

    var description: String,

    var progress: Int,

    @OneToMany(
        fetch = FetchType.EAGER,
        cascade = [CascadeType.ALL],
        mappedBy = "vulnerability",
        targetEntity = VulnerabilityProject::class,
    )
    @JsonIgnore
    var projects: List<VulnerabilityProject>,

    var isActive: Boolean,

    var userId: Long,

) : BaseEntityWithDateAndDto<VulnerabilityDto>() {
    /**
     * @return a vulnerability dto
     */
    override fun toDto() = VulnerabilityDto(
        name = name,
        progress = progress,
        projects = projects.map { it.toDto() },
        description = null,
        isActive = isActive,
        userId = userId,
    )

    /**
     * @return a vulnerability dto with description
     */
    fun toDtoWithDescription() = VulnerabilityDto(
        name = name,
        progress = progress,
        projects = projects.map { it.toDto() },
        description = description,
        isActive = isActive,
        userId = userId,
    )
}
