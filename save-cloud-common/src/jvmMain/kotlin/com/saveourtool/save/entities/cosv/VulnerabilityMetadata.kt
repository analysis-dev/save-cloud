package com.saveourtool.save.entities.cosv

import com.saveourtool.save.entities.Organization
import com.saveourtool.save.entities.User
import com.saveourtool.save.entities.cosv.VulnerabilityMetadataDto.Companion.SUMMARY_LENGTH
import com.saveourtool.save.entities.vulnerability.VulnerabilityLanguage
import com.saveourtool.save.entities.vulnerability.VulnerabilityStatus
import com.saveourtool.save.spring.entity.BaseEntityWithDto

import java.time.LocalDateTime
import javax.persistence.*

import kotlinx.datetime.toKotlinLocalDateTime

/**
 * @property identifier [com.saveourtool.osv4k.OsvSchema.id]
 * @property summary [com.saveourtool.osv4k.OsvSchema.summary]
 * @property details [com.saveourtool.osv4k.OsvSchema.details]
 * @property severityNum [com.saveourtool.osv4k.Severity.scoreNum]
 * @property modified [com.saveourtool.osv4k.OsvSchema.modified]
 * @property submitted when vulnerability submitted to saveourtool platform
 * @property user [User] who uploaded COSV to save
 * @property organization [Organization] to which COSV was uploaded
 * @property language
 * @property status
 * @property latestCosvFile
 **/
@Entity
@Suppress("LongParameterList")
@Table(schema = "cosv", name = "vulnerability_metadata")
class VulnerabilityMetadata(
    var identifier: String,
    @Column(length = SUMMARY_LENGTH)
    var summary: String,
    var details: String,
    var severityNum: Float,
    var modified: LocalDateTime,
    var submitted: LocalDateTime,
    @Enumerated(EnumType.STRING)
    var language: VulnerabilityLanguage,
    @Enumerated(EnumType.STRING)
    var status: VulnerabilityStatus,
    @ManyToOne
    @JoinColumn(name = "user_id")
    var user: User,
    @ManyToOne
    @JoinColumn(name = "organization_id")
    var organization: Organization?,
    @OneToOne
    @JoinColumn(name = "latest_cosv_file_id")
    var latestCosvFile: CosvFile,
) : BaseEntityWithDto<VulnerabilityMetadataDto>() {
    override fun toDto(): VulnerabilityMetadataDto = VulnerabilityMetadataDto(
        identifier = identifier,
        summary = summary,
        details = details,
        severityNum = severityNum,
        modified = modified.toKotlinLocalDateTime(),
        submitted = submitted.toKotlinLocalDateTime(),
        user = user.toUserInfo(),
        organization = organization?.toDto(),
        language = language,
        status = status,
    )
}
