package com.saveourtool.save.entities.vulnerability

import com.saveourtool.save.entities.OrganizationDto
import com.saveourtool.save.entities.cosv.CosvMetadataDto
import com.saveourtool.save.info.UserInfo
import com.saveourtool.save.utils.getCurrentLocalDateTime
import kotlinx.datetime.LocalDateTime
import kotlinx.serialization.Serializable

/**
 * @property name name of vulnerability
 * @property vulnerabilityIdentifier original identifier of vulnerability
 * @property progress vulnerability criticality percentage
 * @property projects links to projects with this vulnerability
 * @property description description of vulnerability
 * @property shortDescription
 * @property relatedLink
 * @property language
 * @property userInfo creator vulnerability
 * @property organization
 * @property dates
 * @property participants
 * @property status
 * @property creationDateTime [LocalDateTime] of creation
 * @property lastUpdatedDateTime [LocalDateTime] of last updating
 * @property tags
 */
@Serializable
data class VulnerabilityDto(
    val name: String,
    val vulnerabilityIdentifier: String?,
    val progress: Int,
    val projects: List<VulnerabilityProjectDto>,
    val description: String?,
    val shortDescription: String,
    val relatedLink: String?,
    val language: VulnerabilityLanguage,
    val userInfo: UserInfo,
    val organization: OrganizationDto?,
    val dates: List<VulnerabilityDateDto>,
    val participants: List<UserInfo>,
    val status: VulnerabilityStatus,
    val creationDateTime: LocalDateTime? = null,
    val lastUpdatedDateTime: LocalDateTime? = null,
    val tags: Set<String> = emptySet(),
) {
    /**
     * @return map where key is LocalDateTime and value is a label of LocalDateTime
     */
    fun getDatesWithLabels() = dates.associate { it.type.value to it.date }

    /**
     * @return all [participants] and owner's [userInfo]
     */
    fun getAllParticipants() = participants.plus(userInfo)

    /**
     * @return [VulnerabilityMetadata] from DTO
     */
    fun toMetadata() = VulnerabilityMetadata(
        name = name,
        vulnerabilityIdentifier = vulnerabilityIdentifier,
        progress = progress,
        description = description,
        shortDescription = shortDescription,
        relatedLink = relatedLink,
        language = language,
        userInfo = userInfo,
        organization = organization,
        participants = participants,
        status = status,
        creationDateTime = creationDateTime,
        lastUpdatedDateTime = lastUpdatedDateTime,
    )

    companion object {
        val empty = VulnerabilityDto(
            "",
            "",
            0,
            emptyList(),
            "",
            "",
            null,
            VulnerabilityLanguage.OTHER,
            UserInfo(name = ""),
            null,
            emptyList(),
            emptyList(),
            VulnerabilityStatus.CREATED,
        )
    }
}
