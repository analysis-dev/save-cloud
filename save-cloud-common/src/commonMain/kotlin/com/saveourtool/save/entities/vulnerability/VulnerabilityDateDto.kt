package com.saveourtool.save.entities.vulnerability

import com.saveourtool.osv4k.RawOsvSchema
import com.saveourtool.osv4k.TimelineEntry
import com.saveourtool.save.utils.asTimelineEntry

import kotlinx.datetime.LocalDateTime
import kotlinx.serialization.Serializable

/**
 * @property date
 * @property type
 * @property vulnerabilityIdentifier
 */
@Serializable
data class VulnerabilityDateDto(
    val date: LocalDateTime,
    val type: VulnerabilityDateType,
    val vulnerabilityIdentifier: String,
) {
    /**
     * @param cosv
     * @param timeLineSetter
     * @param withdrawnSetter
     * @param publishedSetter
     */
    fun addThisDateToCosvTimeline(
        cosv: RawOsvSchema,
        timeLineSetter: (List<TimelineEntry>) -> Unit = {},
        withdrawnSetter: (LocalDateTime?) -> Unit = {},
        publishedSetter: (LocalDateTime?) -> Unit = {},
    ) {
        when (this.type) {
            VulnerabilityDateType.DISCLOSED, VulnerabilityDateType.FIXED, VulnerabilityDateType.FOUND, VulnerabilityDateType.INTRODUCED -> {
                val timeLineEntry = this.asTimelineEntry()
                val newTimeline = cosv.timeline?.let {
                    it + timeLineEntry
                } ?: listOf(timeLineEntry)

                timeLineSetter(newTimeline)
            }

            VulnerabilityDateType.WITHDRAWN -> withdrawnSetter(this.date)

            VulnerabilityDateType.PUBLISHED -> publishedSetter(this.date)

            else -> {

            }
        }
    }
    companion object {
        val empty = VulnerabilityDateDto(
            LocalDateTime(1970, 1, 1, 0, 0),
            VulnerabilityDateType.INTRODUCED,
            "",
        )
    }
}
