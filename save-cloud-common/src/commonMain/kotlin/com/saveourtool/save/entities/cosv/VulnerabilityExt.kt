package com.saveourtool.save.entities.cosv

import com.saveourtool.osv4k.RawOsvSchema
import com.saveourtool.save.entities.vulnerability.VulnerabilityDateDto
import com.saveourtool.save.entities.vulnerability.VulnerabilityLanguage
import com.saveourtool.save.entities.vulnerability.VulnerabilityProjectDto
import com.saveourtool.save.entities.vulnerability.VulnerabilityStatus
import com.saveourtool.save.info.UserInfo
import com.saveourtool.save.utils.getCurrentLocalDateTime
import com.saveourtool.osv4k.RawOsvSchema as RawCosvSchema

/**
 * @property metadata
 * @property cosv
 * @property saveContributors save's user from [com.saveourtool.osv4k.OsvSchema.contributors]
 * @property tags
 * @property timeline
 **/
data class VulnerabilityExt(
    val metadata: CosvMetadataDto,
    val cosv: RawCosvSchema,
    val saveContributors: List<UserInfo>,
    val tags: Set<String>,
    val timeline: List<VulnerabilityDateDto>,
) {
    /**
     * @return map where key is LocalDateTime and value is a label of LocalDateTime
     */
    fun getDatesWithLabels() = timeline.associate { it.type.value to it.date }

    /**
     * @return all [saveContributors] and owner's [metadata.user]
     */
    fun getAllSaveContributors(): List<UserInfo> = listOf(metadata.user).plus(saveContributors)

    /**
     * A stub for [projects]
     */
    val projects: List<VulnerabilityProjectDto>
        get() = emptyList()

    companion object {
        val empty = VulnerabilityExt(
            metadata = CosvMetadataDto(
                cosvId = "",
                summary = "",
                details = "",
                severity = null,
                severityNum = 0,
                modified = getCurrentLocalDateTime(),
                published = getCurrentLocalDateTime(),
                user = UserInfo(name = ""),
                organization = null,
                language = VulnerabilityLanguage.OTHER,
                status = VulnerabilityStatus.CREATED,
            ),
            cosv = RawOsvSchema(id = "", modified = getCurrentLocalDateTime()),
            saveContributors = emptyList(),
            tags = emptySet(),
            timeline = emptyList(),
        )
    }
}
